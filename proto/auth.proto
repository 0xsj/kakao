syntax = "proto3";

package proto;

option go_package = ".";

import "google/protobuf/timestamp.proto";

// The AuthService definition for managing authentication
service AuthService {
  // Sends an OTP to the user
  rpc SendOtp(SendOtpRequest) returns (SendOtpResponse);

  // Verifies the OTP provided by the user
  rpc VerifyOtp(VerifyOtpRequest) returns (VerifyOtpResponse);

  // Issues a session token upon successful authentication
  rpc IssueSessionToken(IssueSessionTokenRequest) returns (IssueSessionTokenResponse);

  // Revokes a session token
  rpc RevokeSessionToken(RevokeSessionTokenRequest) returns (RevokeSessionTokenResponse);
  
  // Verifies a signed challenge from the identity service
  rpc VerifyChallenge(VerifyChallengeRequest) returns (VerifyChallengeResponse);
}

// The request message for sending an OTP
message SendOtpRequest {
  string user_id = 1; // The ID of the user to send OTP to
  string contact_method = 2; // Contact method like phone number or email
}

// The response message for sending an OTP
message SendOtpResponse {
  bool success = 1; // Indicates if OTP was sent successfully
  string otp_token = 2; // The OTP token sent to the user
  google.protobuf.Timestamp issued_at = 3; // Timestamp when OTP was issued
}

// The request message for verifying an OTP
message VerifyOtpRequest {
  string user_id = 1; // The ID of the user
  string otp = 2; // The OTP provided by the user
  google.protobuf.Timestamp received_at = 3; // Timestamp when OTP was received
}

// The response message for verifying an OTP
message VerifyOtpResponse {
  bool valid = 1; // Indicates if the OTP is valid
  string message = 2; // Additional information (e.g., error messages)
}

// The request message for issuing a session token
message IssueSessionTokenRequest {
  string user_id = 1; // The ID of the user
  string otp = 2; // The OTP used to verify the user
}

// The response message for issuing a session token
message IssueSessionTokenResponse {
  string session_token = 1; // The session token for authenticated user
  google.protobuf.Timestamp issued_at = 2; // Timestamp when the session token was issued
  string message = 3; // Additional information (e.g., success or error messages)
}

// The request message for revoking a session token
message RevokeSessionTokenRequest {
  string session_token = 1; // The token to revoke
}

// The response message for revoking a session token
message RevokeSessionTokenResponse {
  bool success = 1; // Indicates if the token was revoked successfully
  string message = 2; // Additional information (e.g., success or error messages)
}

// The request message for verifying a signed challenge
message VerifyChallengeRequest {
  string user_id = 1; // The ID of the user
  string signed_challenge = 2; // The signed challenge from the user
}

// The response message for verifying a signed challenge
message VerifyChallengeResponse {
  bool valid = 1; // Indicates if the signed challenge is valid
  string message = 2; // Additional information (e.g., error messages)
}
