version: '3.9'

services:
  auth-service:
    build:
      context: './'
      dockerfile: ./apps/auth-service/Dockerfile
      args:
        NODE_ENV: 'development'
        APP_NAME: 'auth-service'
    ports:
      - '3001:3001'
    environment:
      NODE_ENV: 'development'
    volumes:
      - shared-volume:/shared
    restart: on-failure

  brand-service:
    build:
      context: './'
      dockerfile: ./apps/brand-service/Dockerfile
      args:
        NODE_ENV: 'development'
        APP_NAME: 'brand-service'
    ports:
      - '3002:3002'
    environment:
      NODE_ENV: 'development'
    volumes:
      - shared-volume:/shared
    restart: on-failure

  document-service:
    build:
      context: './'
      dockerfile: ./apps/document-service/Dockerfile
      args:
        NODE_ENV: 'development'
        APP_NAME: 'document-service'
    ports:
      - '3003:3003'
    environment:
      NODE_ENV: 'development'
    volumes:
      - shared-volume:/shared
    restart: on-failure

  entity-service:
    build:
      context: './'
      dockerfile: ./apps/entity-service/Dockerfile
      args:
        NODE_ENV: 'development'
        APP_NAME: 'entity-service'
    ports:
      - '3004:3004'
    environment:
      NODE_ENV: 'development'
    volumes:
      - shared-volume:/shared
    restart: on-failure

  user-service:
    build:
      context: './'
      dockerfile: ./apps/user-service/Dockerfile
      args:
        NODE_ENV: 'development'
        APP_NAME: 'user-service'
    ports:
      - '3005:3005'
    environment:
      NODE_ENV: 'development'
    volumes:
      - shared-volume:/shared
    restart: on-failure

  gateway:
    build:
      context: './'
      dockerfile: ./apps/gateway/Dockerfile
      args:
        NODE_ENV: 'development'
        APP_NAME: 'gateway'
    ports:
      - '3333:3333'
    environment:
      NODE_ENV: 'development'
    volumes:
      - shared-volume:/shared
    restart: on-failure

volumes:
  shared-volume:
    driver: local
